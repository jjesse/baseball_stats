name: Update MVP and Cy Young Predictions

on:
  schedule:
    - cron: '0 14 * * *'  # Runs daily at 14:00 UTC (main branch only)
  workflow_dispatch:      # Allow manual trigger

jobs:
  update-award-predictions:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Skip scheduled runs on preview branch
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pybaseball pandas matplotlib seaborn numpy
        timeout-minutes: 5

      - name: Generate award predictions
        run: |
          # Set output path based on branch
          if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            export OUTPUT_PATH="docs/preview"
            mkdir -p docs/preview
          else
            export OUTPUT_PATH="docs"
          fi
          python mvp_cy_young_calculator.py || exit 1
        timeout-minutes: 10
        continue-on-error: false

      - name: Run prediction tracking
        run: |
          # Set output path based on branch
          if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            export OUTPUT_PATH="docs/preview"
            mkdir -p docs/preview
          else
            export OUTPUT_PATH="docs"
          fi
          python prediction_tracker.py || exit 1
        timeout-minutes: 5

      - name: Commit and push changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            # Handle potential conflicts
            git fetch origin ${{ github.ref_name }}
            git reset --hard origin/${{ github.ref_name }}
            
            # Set output path based on branch
            if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
              export OUTPUT_PATH="docs/preview"
              mkdir -p docs/preview
              COMMIT_MSG="Update MVP and Cy Young predictions with tracking (preview) [skip ci]"
              FILE_PATTERN="docs/preview/award_predictions.json docs/preview/al_mvp_predictions.csv docs/preview/nl_mvp_predictions.csv docs/preview/al_cy_young_predictions.csv docs/preview/nl_cy_young_predictions.csv docs/preview/prediction_history/ docs/preview/prediction_accuracy*"
            else
              export OUTPUT_PATH="docs"
              COMMIT_MSG="Update MVP and Cy Young predictions with tracking [skip ci]"
              FILE_PATTERN="docs/award_predictions.json docs/al_mvp_predictions.csv docs/nl_mvp_predictions.csv docs/al_cy_young_predictions.csv docs/nl_cy_young_predictions.csv docs/prediction_history/ docs/prediction_accuracy*"
            fi
            
            # Re-run the script after reset
            python mvp_cy_young_calculator.py || exit 1
            python prediction_tracker.py || exit 1
            
            # Commit changes
            git add $FILE_PATTERN
            git commit -m "$COMMIT_MSG"
            git push origin ${{ github.ref_name }}
          else
            echo "No changes to commit"
          fi
        timeout-minutes: 2

      - name: Check for failures
        if: failure()
        run: |
          echo "::error::MVP/Cy Young predictions workflow failed! Check the logs for details."
          exit 1