name: Update Defensive Stats

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 16 * * *'  # Runs daily at 16:00 UTC

jobs:
  update-defensive-stats:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pybaseball pandas matplotlib seaborn
        timeout-minutes: 5

      - name: Generate defensive stats
        run: |
          if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            export OUTPUT_PATH="docs/preview"
            mkdir -p docs/preview
          else
            export OUTPUT_PATH="docs"
          fi
          python defense_chart.py || exit 1
        timeout-minutes: 10
        continue-on-error: false

      - name: Commit and push changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
              git add docs/preview/defense_*.png docs/preview/defense_*.html docs/preview/last_updated_defense.txt docs/preview/defensive_stats.csv
              git commit -m "Update defensive stats (preview) [skip ci]"
            else
              git add docs/defense_*.png docs/defense_*.html docs/last_updated_defense.txt docs/defensive_stats.csv
              git commit -m "Update defensive stats [skip ci]"
            fi
            
            git push origin ${{ github.ref_name }}
          else
            echo "No changes to commit"
          fi
        timeout-minutes: 5