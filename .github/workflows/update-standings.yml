name: Update Standings

on:
  schedule:
    - cron: '0 13 * * *'  # Runs daily at 13:00 UTC (main branch only)
  workflow_dispatch:      # Allows manual trigger

jobs:
  update-standings:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Skip scheduled runs on preview branch
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas matplotlib seaborn requests beautifulsoup4 lxml
      timeout-minutes: 5

    - name: Generate standings data and charts
      run: |
        # Set output path based on branch
        if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
          export OUTPUT_PATH="docs/preview"
          mkdir -p docs/preview
        else
          export OUTPUT_PATH="docs"
        fi
        python standings_chart.py || exit 1
      timeout-minutes: 5
      continue-on-error: false

    - name: Commit and push changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Handle potential conflicts
          git fetch origin ${{ github.ref_name }}
          git reset --hard origin/${{ github.ref_name }}
          
          # Set output path based on branch
          if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            export OUTPUT_PATH="docs/preview"
            mkdir -p docs/preview
            COMMIT_MSG="Update standings data and charts (preview) [skip ci]"
            FILE_PATTERN="docs/preview/standings_*.png docs/preview/standings_*.html docs/preview/standings_*.csv docs/preview/last_updated_standings.txt"
          else
            export OUTPUT_PATH="docs"
            COMMIT_MSG="Update standings data and charts [skip ci]"
            FILE_PATTERN="docs/standings_*.png docs/standings_*.html docs/standings_*.csv docs/last_updated_standings.txt"
          fi
          
          # Re-run the script after reset
          python standings_chart.py || exit 1
          
          # Try commit and push again
          git add $FILE_PATTERN
          git commit -m "$COMMIT_MSG"
          git push origin ${{ github.ref_name }}
        else
          echo "No changes to commit"
        fi
      timeout-minutes: 2

    - name: Check for failures
      if: failure()
      run: |
        echo "::error::Standings workflow failed! Check the logs for details."
        exit 1
