name: Update Standings

on:
  workflow_dispatch: {}  # Manual trigger
  schedule:
    - cron: '0 13 * * *'  # Daily at 13:00 UTC

jobs:
  update-standings:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas matplotlib seaborn requests beautifulsoup4 lxml html5lib
        timeout-minutes: 5

      - name: Generate standings data
        run: |
          export OUTPUT_PATH="docs"
          python standings_chart.py || exit 1
        timeout-minutes: 10

      - name: Commit and push changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            COMMIT_MSG="Update standings [skip ci]"
            FILE_PATTERN="docs/standings_*.html docs/standings_*.png docs/standings_*.json docs/standings_*.csv docs/last_updated_standings.txt"
            
            git add $FILE_PATTERN
            git commit -m "$COMMIT_MSG"
            git push origin ${{ github.ref_name }}
          else
            echo "No changes to commit"
          fi
        timeout-minutes: 5
          }
        timeout-minutes: 3
        continue-on-error: true

      - name: Commit and push changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            # Set commit message and files based on branch
            if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
              COMMIT_MSG="Update standings (preview) [skip ci]"
              FILE_PATTERN="docs/preview/standings_*.json docs/preview/standings_*.png docs/preview/standings_*.html docs/preview/last_updated_standings.txt"
            else
              COMMIT_MSG="Update standings [skip ci]"
              FILE_PATTERN="docs/standings_*.json docs/standings_*.png docs/standings_*.html docs/last_updated_standings.txt"
            fi
            
            git add $FILE_PATTERN
            git commit -m "$COMMIT_MSG"
            git push origin ${{ github.ref_name }}
          else
            echo "No changes to commit"
          fi
        timeout-minutes: 2
