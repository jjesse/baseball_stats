name: Update Batting Stats

on:
  schedule:
    - cron: '0 12 * * *'  # Runs daily at 12:00 UTC (main branch only)
  workflow_dispatch:      # Allows manual trigger from GitHub UI

jobs:
  update-batting:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Add timeout
    # Skip scheduled runs on preview branch
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for trends

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'  # Enable pip caching

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pybaseball matplotlib seaborn pandas
      timeout-minutes: 5

    - name: Run batting chart script
      run: |
        # Set output path based on branch
        if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
          export OUTPUT_PATH="docs/preview"
          mkdir -p docs/preview
        else
          export OUTPUT_PATH="docs"
        fi
        python batting_chart.py || exit 1
      timeout-minutes: 5
      continue-on-error: false

    - name: Archive current batting stats
      run: |
        mkdir -p archive
        if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
          if [ -f "docs/preview/batting_stats.csv" ]; then
            cp docs/preview/batting_stats.csv archive/batting_$(date +%F).csv
          fi
        else
          if [ -f "docs/batting_stats.csv" ]; then
            cp docs/batting_stats.csv archive/batting_$(date +%F).csv
          fi
        fi
      timeout-minutes: 2

    - name: Run batting trend chart script
      run: |
        # Set output path based on branch
        if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
          export OUTPUT_PATH="docs/preview"
          mkdir -p docs/preview
        else
          export OUTPUT_PATH="docs"
        fi
        # Make sure the file uses Unix line endings
        sed -i 's/\r$//' trend_batting.py
        # Make the script executable
        chmod +x trend_batting.py
        # Run the script with error handling
        python trend_batting.py || {
          echo "Warning: trend_batting.py failed, creating fallback files"
          mkdir -p "${OUTPUT_PATH}"
          echo "Trend analysis failed - $(date)" > "${OUTPUT_PATH}/trend_batting_error.txt"
          # Create minimal placeholder images to prevent workflow failure
          for stat in AVG HR RBI; do
            touch "${OUTPUT_PATH}/trend_batting_${stat,,}.png"
          done
        }
      timeout-minutes: 5
      continue-on-error: true

    - name: Commit and push changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Handle potential conflicts
          git fetch origin ${{ github.ref_name }}
          git reset --hard origin/${{ github.ref_name }}
          
          # Set output path based on branch
          if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            export OUTPUT_PATH="docs/preview"
            mkdir -p docs/preview
            COMMIT_MSG="Update batting stats and trends (preview) [skip ci]"
            FILE_PATTERN="docs/preview/batting_*.png docs/preview/batting_*.html docs/preview/last_updated_batting.txt archive/batting_*.csv"
          else
            export OUTPUT_PATH="docs"
            COMMIT_MSG="Update batting stats and trends [skip ci]"
            FILE_PATTERN="docs/batting_*.png docs/batting_*.html docs/last_updated_batting.txt archive/batting_*.csv"
          fi
          
          # Re-run the scripts after reset
          python batting_chart.py || exit 1
          # Run trend script with fallback
          python trend_batting.py || {
            echo "Warning: trend_batting.py failed during commit phase, creating fallback files"
            mkdir -p "${OUTPUT_PATH}"
            echo "Trend analysis failed during commit - $(date)" > "${OUTPUT_PATH}/trend_batting_error.txt"
            # Create minimal placeholder images to prevent workflow failure
            for stat in AVG HR RBI; do
              touch "${OUTPUT_PATH}/trend_batting_${stat,,}.png"
            done
          }
          
          # Archive again after reset
          mkdir -p archive
          if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            if [ -f "docs/preview/batting_stats.csv" ]; then
              cp docs/preview/batting_stats.csv archive/batting_$(date +%F).csv
            fi
          else
            if [ -f "docs/batting_stats.csv" ]; then
              cp docs/batting_stats.csv archive/batting_$(date +%F).csv
            fi
          fi
          
          # Try commit and push again
          git add $FILE_PATTERN
          git commit -m "$COMMIT_MSG"
          git push origin ${{ github.ref_name }}
        else
          echo "No changes to commit"
        fi
      timeout-minutes: 2
