name: Update Batting Stats

on:
  workflow_dispatch: {}  # Minimalist workflow_dispatch trigger that will definitely work
  schedule:
    - cron: '0 12 * * *'  # Runs daily at 12:00 UTC (main branch only)

jobs:
  update-batting:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # Skip scheduled runs on preview branch
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pybaseball matplotlib seaborn pandas
      timeout-minutes: 5

    - name: Run batting chart script
      run: |
        # Set output path based on branch
        if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
          export OUTPUT_PATH="docs/preview"
          mkdir -p docs/preview
        else
          export OUTPUT_PATH="docs"
        fi
        python batting_chart.py || exit 1
      timeout-minutes: 5

    - name: Archive current batting stats
      run: |
        mkdir -p archive
        if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
          if [ -f "docs/preview/batting_stats.csv" ]; then
            cp docs/preview/batting_stats.csv archive/batting_$(date +%F).csv
          fi
        else
          if [ -f "docs/batting_stats.csv" ]; then
            cp docs/batting_stats.csv archive/batting_$(date +%F).csv
          fi
        fi
      timeout-minutes: 2

    - name: Run batting trend chart script
      run: |
        # Set output path based on branch
        if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
          export OUTPUT_PATH="docs/preview"
          mkdir -p docs/preview
        else
          export OUTPUT_PATH="docs"
        fi
        python trend_batting.py || {
          echo "Warning: trend_batting.py failed, creating fallback files"
          mkdir -p "${OUTPUT_PATH}"
          echo "Trend analysis failed - $(date)" > "${OUTPUT_PATH}/trend_batting_error.txt"
          for stat in AVG HR RBI; do
            touch "${OUTPUT_PATH}/trend_batting_${stat,,}.png"
          done
        }
      timeout-minutes: 5
      continue-on-error: true

    - name: Commit and push changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Set output path based on branch
          if [ "${{ github.ref }}" = "refs/heads/preview" ]; then
            export OUTPUT_PATH="docs/preview"
            mkdir -p docs/preview
            COMMIT_MSG="Update batting stats and trends (preview) [skip ci]"
            FILE_PATTERN="docs/preview/batting_*.png docs/preview/batting_*.html docs/preview/last_updated_batting.txt archive/batting_*.csv"
          else
            export OUTPUT_PATH="docs"
            COMMIT_MSG="Update batting stats and trends [skip ci]"
            FILE_PATTERN="docs/batting_*.png docs/batting_*.html docs/last_updated_batting.txt archive/batting_*.csv"
          fi
          
          git add $FILE_PATTERN
          git commit -m "$COMMIT_MSG"
          
          # Improved push with rebase handling
          for attempt in {1..3}; do
            echo "Attempt $attempt to push changes..."
            
            if git push origin ${{ github.ref_name }}; then
              echo "Successfully pushed on attempt $attempt"
              break
            else
              if [ $attempt -lt 3 ]; then
                echo "Push failed, fetching and rebasing..."
                git fetch origin ${{ github.ref_name }}
                git rebase origin/${{ github.ref_name }} || git reset --soft origin/${{ github.ref_name }}
                git commit -m "$COMMIT_MSG" || echo "Nothing to commit after rebase"
                sleep 5
              else
                echo "Failed to push after 3 attempts"
                exit 1
              fi
            fi
          done
        else
          echo "No changes to commit"
        fi
      timeout-minutes: 5
